<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.2.xsd
						http://www.springframework.org/schema/security/oauth2 
						http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


	<!-- Configure Authentication mechanism -->
    <bean id="passwordEncoder" 
    	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    <bean id="authenticationKeyGenerator" 
    	class="org.springframework.security.oauth2.provider.token.DefaultAuthenticationKeyGenerator"/>
	<bean id="clientKeyGenerator" 
		class="org.springframework.security.oauth2.client.token.DefaultClientKeyGenerator" />
	
	<!-- !!!!!!!! -->
	<bean id="tokenAuthenticationProvider"
		class="com.smartcity.business.security.provider.TokenAuthenticationProvider" />
	<bean id="PasswordAuthenticationProvider"
		class="com.smartcity.business.security.provider.PasswordAuthenticationProvider" />
		
	<bean id="tokenController"
		class="com.smartcity.business.security.authentication.TokenControllerImpl" />
	<bean id="passwordController"
		class="com.smartcity.business.security.authentication.PasswordControllerImpl" />
		
	<bean id="userStatusController"
		class="com.smartcity.business.security.authentication.UserStatusControllerImpl" />	
	
	<bean id="tokenSuccessHandler"
		class="com.smartcity.business.security.handler.TokenSuccessHandler" />
	<bean id="loginSuccessHandler"
		class="com.smartcity.business.security.handler.LoginSuccessHandler" />
	<bean id="loginFailureHandler"
		class="com.smartcity.business.security.handler.LoginFailureHandler" />	
	<bean id="tokenLogoutHandler"
		class="com.smartcity.business.security.handler.TokenLogoutHandler" />
		
	<bean id="logoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler" />

    <!-- !!!!!!!! -->
    
    <!-- Protect REST resource methods with JSR-250 annotations 
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.annotation.Jsr250Voter" />
			</list>
		</property>
	</bean>-->

	<!-- Managing Tokens -->
	<!-- <bean id="tokenStore" 
		class="com.smartcity.business.security.authentication.token.LocalTokenStore" >
		<constructor-arg name="accessTokenRepository" ref="oAuth2AccessTokenRepoImpl" />
		<constructor-arg name="refreshTokenRepository" ref="oAuth2RefreshTokenRepoImpl" />
		<constructor-arg name="authKeyGenerator" ref="authenticationKeyGenerator" />
	</bean>
	
	<bean id="clientTokenService"
	    class="com.smartcity.business.security.authentication.token.LocalClientTokenService">
	    <constructor-arg name="clientTokenRepository" ref="oAuth2ClientTokenRepoImpl" />
	    <constructor-arg name="clientKeyGenerator" ref="clientKeyGenerator" />
	</bean>
	
	<bean id="tokenServices"
	    class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
	    <property name="tokenStore" ref="tokenStore" />
	    <property name="supportRefreshToken" value="true" />
	    <property name="accessTokenValiditySeconds" value="120"></property>
	</bean> -->
		
	<!-- Token Approval Handler -->
	<!-- <bean id="approvalStore" 
		class="com.smartcity.business.security.authentication.token.LocalApprovalStore">
		<constructor-arg name="tokenStore" ref="tokenStore" />
		<property name="handleRevocationsAsExpiry" value="false" />
	</bean> -->
	
	<bean id="userDetailsManager"
	    class="com.smartcity.business.security.authentication.LocalUserDetailsManager">
	</bean>
	
<!--     <property name="requestFactory">
           <bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
               <constructor-arg index="0" ref="clientDetails"/>
           </bean>
    </property>-->
	
<!-- <bean id="clientAuthenticationEntryPoint" 
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="SmartCity API" />
		<property name="typeName" value="Basic" />
	</bean> -->
 
<!--	Rest authentication entry point configuration auto-config="true" use-expressions="true"-->
<!-- 	<security:http 
		pattern="/api/**" 
		create-session="stateless"
		authentication-manager-ref="authenticationManager">
		<security:anonymous enabled="false" />
		<security:intercept-url pattern="/api/**" method="POST" access="IS_AUTHENTICATED_FULLY"/>
		<security:intercept-url pattern="/api/**" method="GET" access="IS_AUTHENTICATED_FULLY"/>
		<security:custom-filter ref="serverFilter" position="LAST"/>
		<security:custom-filter ref="resourceServerFilter" position="PRE_AUTH_FILTER"/>
  		<security:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
 		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http> 
 -->
	
</beans>